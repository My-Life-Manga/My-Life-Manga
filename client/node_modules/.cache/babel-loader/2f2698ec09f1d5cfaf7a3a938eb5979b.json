{"ast":null,"code":"var _jsxFileName = \"/Users/crystalochoa/Desktop/My-Life-Manga/client/src/components/post/Post.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Comments from \"../comments/Comments\";\nimport moment from \"moment\";\nimport { useQuery, useQueryClient, useMutation } from \"@tanstack/react-query\";\nimport { makeRequest } from \"../../axios\";\nimport { AuthContext } from \"../../context/authContext\";\nimport icons from './icons';\nimport \"./post.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = _ref => {\n  _s();\n\n  let {\n    post\n  } = _ref;\n  const [commentOpen, setCommentOpen] = useState(false);\n  const [menuOpen, setMenuOpen] = useState(false);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery([\"likes\", post.id], () => makeRequest.get(\"/likes?postId=\" + post.id).then(res => {\n    return res.data;\n  }));\n  const queryClient = useQueryClient();\n  const mutation = useMutation(liked => {\n    if (liked) return makeRequest.delete(\"/likes?postId=\" + post.id);\n    return makeRequest.post(\"/likes\", {\n      postId: post.id\n    });\n  }, {\n    onSuccess: () => {\n      // Invalidate and refetch\n      queryClient.invalidateQueries([\"likes\"]);\n    }\n  });\n  const deleteMutation = useMutation(postId => {\n    return makeRequest.delete(\"/posts/\" + postId);\n  }, {\n    onSuccess: () => {\n      // Invalidate and refetch\n      queryClient.invalidateQueries([\"posts\"]);\n    }\n  });\n\n  const handleLike = () => {\n    mutation.mutate(data.includes(currentUser.id));\n  };\n\n  const handleDelete = () => {\n    deleteMutation.mutate(post.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/upload/\" + post.profilePic,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"details\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/profile/${post.userId}`,\n              style: {\n                textDecoration: \"none\",\n                color: \"inherit\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"name\",\n                children: post.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"date\",\n              children: moment(post.createdAt).fromNow()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(icons.MoreHorizIcon, {\n          onClick: () => setMenuOpen(!menuOpen)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), menuOpen && post.userId === currentUser.id && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDelete,\n          children: \"delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/upload/\" + post.img,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          children: [isLoading ? \"loading\" : data.includes(currentUser.id) ? /*#__PURE__*/_jsxDEV(icons.FavoriteOutlinedIcon, {\n            style: {\n              color: \"red\"\n            },\n            onClick: handleLike\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(icons.FavoriteBorderOutlinedIcon, {\n            onClick: handleLike\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 18\n          }, this), data === null || data === void 0 ? void 0 : data.length, \" Likes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          onClick: () => setCommentOpen(!commentOpen),\n          children: [/*#__PURE__*/_jsxDEV(icons.TextsmsOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 78\n          }, this), \"See Comments\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          children: [/*#__PURE__*/_jsxDEV(icons.ShareOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 33\n          }, this), \"Share\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), commentOpen && /*#__PURE__*/_jsxDEV(Comments, {\n        postId: post.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Post, \"46eaWz+DeW6dKwpNaRzziX56VsE=\", false, function () {\n  return [useQuery, useQueryClient, useMutation, useMutation];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/crystalochoa/Desktop/My-Life-Manga/client/src/components/post/Post.jsx"],"names":["useState","useContext","Link","Comments","moment","useQuery","useQueryClient","useMutation","makeRequest","AuthContext","icons","Post","post","commentOpen","setCommentOpen","menuOpen","setMenuOpen","currentUser","isLoading","error","data","id","get","then","res","queryClient","mutation","liked","delete","postId","onSuccess","invalidateQueries","deleteMutation","handleLike","mutate","includes","handleDelete","profilePic","userId","textDecoration","color","name","createdAt","fromNow","desc","img","length"],"mappings":"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","sourcesContent":["import {useState , useContext} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Comments from \"../comments/Comments\";\nimport moment from \"moment\";\nimport {useQuery, useQueryClient, useMutation} from \"@tanstack/react-query\";\nimport {makeRequest} from \"../../axios\";\nimport {AuthContext} from \"../../context/authContext\";\nimport icons from './icons'\nimport \"./post.scss\";\n\nconst Post = ({post}) => {\n  const [commentOpen, setCommentOpen] = useState(false);\n  const [menuOpen, setMenuOpen] = useState(false);\n\n  const {currentUser} = useContext(AuthContext);\n\n  const {isLoading, error, data} = useQuery([\"likes\", post.id], () =>\n    makeRequest.get(\"/likes?postId=\" + post.id).then((res) => {\n      return res.data;\n    })\n  );\n\n  const queryClient = useQueryClient();\n\n  const mutation = useMutation(\n    (liked) => {\n      if (liked) return makeRequest.delete(\"/likes?postId=\" + post.id);\n      return makeRequest.post(\"/likes\", {postId: post.id});\n    },\n    {\n      onSuccess: () => {\n        // Invalidate and refetch\n        queryClient.invalidateQueries([\"likes\"]);\n      },\n    }\n  );\n  const deleteMutation = useMutation(\n    (postId) => {\n      return makeRequest.delete(\"/posts/\" + postId);\n    },\n    {\n      onSuccess: () => {\n        // Invalidate and refetch\n        queryClient.invalidateQueries([\"posts\"]);\n      },\n    }\n  );\n\n  const handleLike = () => {\n    mutation.mutate(data.includes(currentUser.id));\n  };\n\n  const handleDelete = () => {\n    deleteMutation.mutate(post.id);\n  };\n\n  return (\n    <div className=\"post\">\n      <div className=\"container\">\n        <div className=\"user\">\n          <div className=\"userInfo\">\n            <img src={\"/upload/\" + post.profilePic} alt=\"\"/>\n            <div className=\"details\">\n              <Link to={`/profile/${post.userId}`} style={{textDecoration: \"none\", color: \"inherit\"}}>\n                <span className=\"name\">{post.name}</span>\n              </Link>\n              <span className=\"date\">{moment(post.createdAt).fromNow()}</span>\n            </div>\n          </div>\n          <icons.MoreHorizIcon onClick={() => setMenuOpen(!menuOpen)}/>\n          {menuOpen && post.userId === currentUser.id && (\n            <button onClick={handleDelete}>delete</button>\n          )}\n        </div>\n        <div className=\"content\">\n          <p>{post.desc}</p>\n          <img src={\"/upload/\" + post.img} alt=\"\"/>\n        </div>\n        <div className=\"info\">\n          <div className=\"item\">\n            {isLoading ? (\"loading\") : data.includes(currentUser.id) ? (\n              <icons.FavoriteOutlinedIcon\n                style={{color: \"red\"}}\n                onClick={handleLike}\n              />\n            ) : (<icons.FavoriteBorderOutlinedIcon onClick={handleLike}/>)}\n            {data?.length} Likes\n          </div>\n          <div className=\"item\" onClick={() => setCommentOpen(!commentOpen)}><icons.TextsmsOutlinedIcon/>See Comments</div>\n          <div className=\"item\"><icons.ShareOutlinedIcon/>Share</div>\n        </div>\n        {commentOpen && <Comments postId={post.id}/>}\n      </div>\n    </div>\n  );\n};\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}